/*

!FILEX BOX //
---------
!@ flex-box direction
    IT SETS HOW FLEX ITEMS ARE PLACED IN THE FLEX CONTAINER, 
     ALONG WHICH AXIS AND DIRECTION. //
    *1):-flex-direction: column;
    *2):-flex-direction: column-reverse;
    *3):flex-direction: row;
    *4):-flex-direction: row-reverse;

 
 !@ Flex Wrap
      Sets wether flex items are forced onto one line or can wrap
      onto multiple lines
    *1):-flex-wrap:nowrap;// bydefault there is no any change
    *2):-flex-wrap:wrap;
    *3):-flex-wrap:wrap-reverse;

 @ Justify Content
    tells how the browser distributes space between and 
    around content items along the main-axis(column)//
    *1):- justify-content:flex-start;
    *2):-justify-content:flex-end;
    *3):-justify-content:flex-center; // for space

    
@Align Content
        It sets the distribution of space between and around
        content items along a firebox's cross-axis(column ;      
    *1):-align-content:flex-start/flex-end/center;
    *2):-align-content:space-between/space-sround/evenly;
    *3):-align-content:baseline;

 @Align Items
    To distributes our items along the cross axis
    *1):-align-items:stretch;
    *2):-align-items:start;
    *3):-align-items:center;
    *4):-align-items:end;
    *5):-align-items:baseline;// all words are in same lined
      ! /// Align self > Align item
 !@Align Self
         Align an item along the cross axis
         *1):- align-self:flex-start;
         *2):- align-self:flex-end;
         *3):- align-self:centert;
         *4):- align-self:baseline;

!@Flex sizing
             * 1):-flex basis //it sets the initial main size
                of a flex item.
                -> flex-basis:100px;

             *2):- Flex grow
              !       //it specifies how much of the flex container's
                     remaining space should be assigned to the flex item's main size
               *       flex-grow :1...

             *3):-flex-Shrink//It sets the shrink factor of a item.

                   *   flex-shrink:1...

                    
                    
         ! @Flex Shortand
                      * flex-grow | flex-shrink | flex-basis
                           1):- flex: 2 2 200px;
                      * flex-grow | flex-basis
                           2):- flex: 2 100px;
                      * flex-grow (unitless)    
                           3):- flex: 2;
                      * flex-basis
                           4):- 100px;        
                    
        */

#contianer{
    height: 300px;
    width: 500px;
    border: 2px solid black;
    background-color: #756d6dc1;
    margin: 20px auto;
    /* padding: 10px 2px; */
    display: flex;
    /* flex-direction: column-reverse; */
    /* flex-direction: row-reverse; */
    /* flex-direction: row; */
    /* flex-direction: column; */
    /* justify-content: end; */
    /* justify-content:end; */
    /* flex-wrap: wrap; */
    /* flex-wrap: wrap-reverse; */
     align-items:end; 
    /* align-content: flex-end; */
    }
h1{
    text-align: center;
    margin-top: 30px;

}

#contianer div{
    width: 100px;
    height: 100px;
    /* text-align: bottom; */
    /* border-radius: 20%;   */

}

 #green{ 
    /* align-self: flex-end; */
    /* align-self: center; */
    /* flex-basis: 30em; */
      flex-grow: 1;
    min-width: 80px; 
    /* flex-shrink: 3; */
}
/* #org{ */
    /* flex-grow: 3; */
    /* text-align: center; */
    /* max-width:  440px; */
/* } */ 